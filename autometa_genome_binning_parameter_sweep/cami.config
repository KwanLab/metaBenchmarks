#!/usr/bin/env nextflow

// Data
params.assemblies = "${HOME}/metaBenchmarks/data/cami/{marine,strain_madness}/assembly/*.fasta.gz"
params.filtered_assemblies = "${HOME}/metaBenchmarks/data/cami/{marine,strain_madness}/assembly/*.filtered.fna"
params.interleaved_reads = "${HOME}/metaBenchmarks/data/cami/{marine,strain_madness}/reads/*short*fq.gz"
params.v2_coverage = "${HOME}/metaBenchmarks/data/cami/{marine,strain_madness}/assembly/coverage.tsv"
// params.references = "${HOME}/metaBenchmarks/data/assemblies/simulated/*/*_assignments.tsv.gz"
// params.v1_coverage = "${HOME}/metaBenchmarks/data/assemblies/simulated/*/autometa_v1_coverage.tsv"
// params.v1_taxonomy = "${HOME}/metaBenchmarks/data/assemblies/simulated/*/autometa_v1_taxonomy.tsv"
// params.v2_taxonomy = "${HOME}/metaBenchmarks/data/assemblies/simulated/*/taxonomy.tsv"

// Databases
params.autometa_db = "${HOME}/metaBenchmarks/data/cami/databases"

// Outputs
params.outdir = "nf-autometa-binning-parameter-sweep-benchmarks/cami"
params.publish_dir_mode = "symlink"

// Runtime parameters
// Will try process with 4 cpus, then double upon retries
// i.e. 4, 8, 16, 32
params.cpus = 4


// Parameter sweep parameters
params.cluster_method = ['dbscan', 'hdbscan']
params.completeness = [10, 20, 40, 60, 70, 80, 90]
params.purity = [60, 75, 85, 95]
params.cov_stddev_limit = [2, 5, 10, 15]
params.gc_stddev_limit = [2, 5, 10, 15]
